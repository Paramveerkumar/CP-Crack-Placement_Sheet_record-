class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
      vector<vector<int>>res;
        if(nums.empty()) return res;
        sort(nums.begin(),nums.end());
        
       int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++){
                int target_2=target-nums[i]-nums[j];//It gives remaining element which we have to //search
             int left=j+1;
             int right=n-1;
            
            while(left<right)
            {
                int two_sum=nums[left]+nums[right];
                if(two_sum<target_2) left++;
                else if (two_sum > target_2) right--;
                
                else
                {
                    vector<int>quad(4,0);
                    quad[0]=nums[i];
                    quad[1]=nums[j];
                    quad[2]=nums[left];
                    quad[3]=nums[right];
                    res.push_back(quad);
                    
                    //processing of duplicate of 3
                    while(left<right && nums[left]==quad[2]) ++left;
                    //processing of duplicate of 4
                    while(left<right && nums[right]==quad[3]) --right;
                 }
            }
            while(j+1<n && nums[j+1]==nums[j]) ++j;
            }
            while(i+1<n && nums[i+1]==nums[i])  ++i;
         }
        return res;
    }
};
